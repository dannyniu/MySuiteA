2020-12-09:

I do now plan to implement PKCS#1 RSA and SEC#1 ECC public-key cryptography.
Code quality is as prioritized as the rest of the suite. New features will be
implemented in stages, (ones that're complete will have its bullet point
changed from "-" to "+"):

+ Memory-compact scalar multiplication-reduction routine(s).

+ Somewhat memory-compact modular exponentiation for RSA.

+ Finite field implementation for ECC curves secp256r1 and secp384r1.

+ Test suites for all finite field arithmetics.

+ Formallization of further plans.

Post 2020-12-09, further plans:

2021-01-24:

RSA will come before ECC. The initial effort will focus on designing
working contexts for RSA decryption and encryption - they'll be slightly
different to allow encryption contexts to consume less resource; ...

2021-12-04:

It is intended that public-key cryptography will support at least
key and ciphergram formats of ASN.1 and JSON, with other formats being
considered. This is currently under investigation, and a uniform API
for PKC is being post-poned for this.

This does not mean their API will be left in an inconsistently implemented
state - their API will conform to that in "mysuitea-common.h", only that
the definition for their "crypto object" will come at a later time.

2021-12-25:

Current RSA progress:

+ DER parser.

+ Mathematical working context.

+ Schemes' paddings' working context.

+ Full-scheme testing.

+ Uniform API.

2022-02-08:

+ PKCS#1 v1.5 legacy RSA algorithms (will come later).

+ ECDSA (1st to come).

+ ECDH (KEM-based API, 2nd to come).

+ Chinese SM2 DSS (and KEM dropped).

+ Formaliization of yet further plans (i).

2022-04-14:

SM2 DSS has a signer identity parameter that must be supported. It will be
supported through a "initialization with a vector of data buffers" API,
which will be explored through implementing a subset of algorithms from the

> NIST-SP-800-185 SHA-3 Derived Functions:
> cSHAKE, KMAC, TupleHash and ParallelHash

Implementations for some KDFs would have been considered, through the said
vector buffer API. But due to the proliferation of application-specific KDFs,
this had been indefinitely postponed.

After implementing the following algorithms, MySuiteA development will
enter hibernation, until the publication of NIST PQC standard(s):

+ cSHAKE, KMAC;
+ SM2 DSS; (SM2 KEX and PKE are irregular and had been dropped.)
+ X25519, X448, Ed25519, and Ed448;
+ PKCS #1 v1.5 encryption and signature;
+ CCM blockcipher-based AEAD.
